<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.szce.os.dao.mapper.OsBikeuseinfoMapper">
  <resultMap id="BaseResultMap" type="com.szce.os.dao.model.OsBikeuseinfo">
    <result column="CURRENTSTATUE" jdbcType="INTEGER" property="currentstatue" />
    <result column="HISTORICALUSETIME" jdbcType="TIMESTAMP" property="historicalusetime" />
    <result column="HISTORICALDISTANCE" jdbcType="VARCHAR" property="historicaldistance" />
    <result column="HISTORICALFEE" jdbcType="VARCHAR" property="historicalfee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CURRENTSTATUE, HISTORICALUSETIME, HISTORICALDISTANCE, HISTORICALFEE
  </sql>
  <select id="selectByExample" parameterType="com.szce.os.dao.model.OsBikeuseinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from os_bikeuseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.szce.os.dao.model.OsBikeuseinfoExample">
    delete from os_bikeuseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.szce.os.dao.model.OsBikeuseinfo">
    insert into os_bikeuseinfo (CURRENTSTATUE, HISTORICALUSETIME, 
      HISTORICALDISTANCE, HISTORICALFEE)
    values (#{currentstatue,jdbcType=INTEGER}, #{historicalusetime,jdbcType=TIMESTAMP}, 
      #{historicaldistance,jdbcType=VARCHAR}, #{historicalfee,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.szce.os.dao.model.OsBikeuseinfo">
    insert into os_bikeuseinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="currentstatue != null">
        CURRENTSTATUE,
      </if>
      <if test="historicalusetime != null">
        HISTORICALUSETIME,
      </if>
      <if test="historicaldistance != null">
        HISTORICALDISTANCE,
      </if>
      <if test="historicalfee != null">
        HISTORICALFEE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="currentstatue != null">
        #{currentstatue,jdbcType=INTEGER},
      </if>
      <if test="historicalusetime != null">
        #{historicalusetime,jdbcType=TIMESTAMP},
      </if>
      <if test="historicaldistance != null">
        #{historicaldistance,jdbcType=VARCHAR},
      </if>
      <if test="historicalfee != null">
        #{historicalfee,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.szce.os.dao.model.OsBikeuseinfoExample" resultType="java.lang.Long">
    select count(*) from os_bikeuseinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update os_bikeuseinfo
    <set>
      <if test="record.currentstatue != null">
        CURRENTSTATUE = #{record.currentstatue,jdbcType=INTEGER},
      </if>
      <if test="record.historicalusetime != null">
        HISTORICALUSETIME = #{record.historicalusetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.historicaldistance != null">
        HISTORICALDISTANCE = #{record.historicaldistance,jdbcType=VARCHAR},
      </if>
      <if test="record.historicalfee != null">
        HISTORICALFEE = #{record.historicalfee,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update os_bikeuseinfo
    set CURRENTSTATUE = #{record.currentstatue,jdbcType=INTEGER},
      HISTORICALUSETIME = #{record.historicalusetime,jdbcType=TIMESTAMP},
      HISTORICALDISTANCE = #{record.historicaldistance,jdbcType=VARCHAR},
      HISTORICALFEE = #{record.historicalfee,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>